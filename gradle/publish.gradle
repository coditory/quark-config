apply plugin: 'io.codearte.nexus-staging'
apply plugin: 'maven-publish'
apply plugin: 'signing'
apply plugin: 'de.marcphilipp.nexus-publish'

nexusStaging {
    packageGroup = "com.coditory"
    stagingProfileId = "365d557aaf167c"
    username = project.findProperty('nexusUsername') ?: System.getenv('NEXUS_USERNAME')
    password = project.findProperty('nexusPassword') ?: System.getenv('NEXUS_PASSWORD')
    numberOfRetries = 50
    delayBetweenRetriesInMillis = 3000
}

jar {
    from(rootProject.projectDir) {
        include "LICENSE.md"
        into "META-INF"
        expand(
                copyright: new Date().format("yyyy"),
                version: project.version
        )
    }
}

task javadocJar(type: Jar) {
    from javadoc
    archiveClassifier = 'javadoc'
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    archiveClassifier = 'sources'
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = archivesBaseName
            from components.java
            artifact sourcesJar
            artifact javadocJar

            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }

            pom {
                name = archivesBaseName
                description = project.description
                url = 'https://github.com/coditory/coditory-common'
                organization {
                    name = "Coditory"
                    url = "https://coditory.com"
                }
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'coditory'
                        name = 'Coditory'
                        email = 'admin@coditory.com'
                    }
                }
                scm {
                    connection = 'scm:git@github.com:coditory/coditory-common.git'
                    developerConnection = 'scm:git@github.com:coditory/coditory-common.git'
                    url = 'https://github.com/coditory/coditory-common'
                }
                issueManagement {
                    system = "GitHub"
                    url = "https://github.com/coditory/coditory-common/issues"
                }
            }
        }
    }
}

signing {
    if (System.getenv('SIGNING_KEY') && System.getenv('SIGNING_PASSWORD')) {
        useInMemoryPgpKeys(System.getenv('SIGNING_KEY'), System.getenv('SIGNING_PASSWORD'))
    }
    sign publishing.publications.mavenJava
}

nexusPublishing {
    connectTimeout = Duration.ofMinutes(5)
    clientTimeout = Duration.ofMinutes(5)
    repositories {
        sonatype()
    }
}
